@model Driver.WebSite.ViewModels.AddItemViewModel

@{
    ViewBag.Title = "Dodaj wpis";
}

<h2>Dodaj nowy materiał</h2>
<hr />
<div class="add-item-container">

    @using (Html.BeginForm("SaveItem", "Home"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("Description", Model.Description, new { @class = "form-control", rows = 4 })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContentUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContentUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContentUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Drivers, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="drivers-form">
                    @for (int i = 0; i < Model.Drivers.Count; i++)
                    {
                        <div class="driver-form @if (i > 0) { <text>hidden</text> } ">
                            @Html.EditorFor(m => m.Drivers[i], new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    }
                    <div class="add-driver">
                        <a id="addDriver">Dodaj następnego kierowcę</a>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Dodaj" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $('#addDriver').click(function () {
            $(".drivers-form .hidden").first().removeClass('hidden');
            if (!$(".drivers-form .hidden")[0]) {
                $('#addDriver').hide();
            }
        });
    </script>
}